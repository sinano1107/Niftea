{"remainingRequest":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/babel-loader/lib/index.js!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/choumasateru/Desktop/development_direction/vue/niftea/src/components/Timeline.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/src/components/Timeline.vue","mtime":1578226723254},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UvYXBwJzsKaW1wb3J0ICdmaXJlYmFzZS9kYXRhYmFzZSc7CmltcG9ydCAnZmlyZWJhc2Uvc3RvcmFnZSc7CmltcG9ydCBJbmRldGVybWluYXRlIGZyb20gJy4vSW5kZXRlcm1pbmF0ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgcG9zdExpc3Q6IFtdLAogICAgICB1c2Vyc0RhdGE6IHt9LAogICAgICBpbWdVUkw6IHt9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgSW5kZXRlcm1pbmF0ZTogSW5kZXRlcm1pbmF0ZQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOOCgeOBo+OBoeOCg+OCqOODqeODvOi1t+OBjeOCi+OBkeOBqXNldFRpbWVvdXTjgafjgZTjgormirzjgZfjgZfjgabjgb7jgZkg44Gq44KT44GL6Imv44GE6Kej5rG65rOV44Gq44GE44GL44GqIDw9IGFzeW5jL2F3YWl0CiAgICAvLyBmaXJlYmFzZeOBqOOBrumAmuS/oee1guOCj+OBo+OBpuOBi+OCiTx0ZW1wbGF0ZT7oqq3jgb/ovrzjgoDjgojjgYbjgavjgZnjgozjgbDoia/jgYTjgpPjgaDjgajmgJ3jgYYKICAgIC8vIFByb21pc2Xjgafjg6vjg7zjg5flh6bnkIbjgZnjgovjgZ/jgoHjgavjgarjgpPjgYvlpInjgarjga7kvb/jgaPjgabjgosgUHJvbWlzZeS9v+OBo+OBpuOCi+OBj+OBm+OBq+imi+mAmuOBl+OCr+OCveOBp+OBmQogICAgLy8g44K944O844K5ID0+ICdodHRwczovL2Jsb2cuaHRtbGhpZml2ZS5jb20vMjAxNi8wMi8yMi9wcm9taXNlLWFzeW5jLWxvb3AvJwogICAgdmFyIGRhdGFiYXNlID0gZmlyZWJhc2UuZGF0YWJhc2UoKTsKICAgIHZhciBzdG9yYWdlID0gZmlyZWJhc2Uuc3RvcmFnZSgpOwogICAgdmFyIHNlbGYgPSB0aGlzOyAvLyBQcm9taXNl44Gn6Z2e5ZCM5pyf5Yem55CG44GZ44KL44K+CgogICAgdmFyIHJlc3VsdCA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIC8vIHBvc3RzRGF0YSh1aWQsIGNvbnRlbnQp44Gu5Y+W5b6XCiAgICAgIHZhciBwb3N0cyA9IGRhdGFiYXNlLnJlZignL3Bvc3RzJyk7CiAgICAgIHBvc3RzLm9uKCd2YWx1ZScsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICAgIHZhciBwb3N0TGlzdCA9IFtdOwogICAgICAgIHZhciB2YWwgPSBzbmFwc2hvdC52YWwoKTsgLy8g6YCj5oOz6YWN5YiX44KS44Or44O844OX44Gn5bGV6ZaL44GX44Gm6YWN5YiX44Gr44GZ44KLCgogICAgICAgIE9iamVjdC5rZXlzKHZhbCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICBwb3N0TGlzdC5wdXNoKHZhbFtrZXldKTsKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmRlYnVnKHZhbCk7CiAgICAgICAgY29uc29sZS5kZWJ1Zyhwb3N0TGlzdCk7CiAgICAgICAgc2VsZi5wb3N0TGlzdCA9IHBvc3RMaXN0LnJldmVyc2UoKTsgLy8gdGhpcy5wb3N0TGlzdOOBq+S7o+WFpSDjgaTjgYTjgafjgavlj43ou6IKICAgICAgICAvL3Jlc29sdmUodmFsKQoKICAgICAgICByZXNvbHZlKHBvc3RMaXN0KTsKICAgICAgfSk7CiAgICB9KTsKICAgIHJlc3VsdC50aGVuKGZ1bmN0aW9uIChkYXRhcykgewogICAgICBjb25zb2xlLmRlYnVnKGRhdGFzKTsgLy8g44OH44O844K/44OZ44O844K544GucG9zdHPjgpLlj5fjgZHlj5bjgorjg6vjg7zjg5fjgaflsZXplovjgZfjgaZ1aWTjgpLlj5blvpcg44Gd44KM44GrZmlsdGVy44GL44GR44Gm5qyh44Gr5Zue44GZCgogICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGxpc3QgPSBbXTsgLy8g44GT44GT44Gr44Or44O844OX44GV44Gb44KL6Zai5pWwCiAgICAgICAgLy8gZGF0YXPjga5kYXRh44KS5Y+X44GR5Y+W44Gj44GmdWlk44KS6L+U44GZCgogICAgICAgIGZ1bmN0aW9uIG1ha2VMaXN0KGluZGV4KSB7CiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhkYXRhc1tpbmRleF0pOwogICAgICAgICAgICBsaXN0LnB1c2goZGF0YXNbaW5kZXhdLnVpZCk7CiAgICAgICAgICAgIHJlc29sdmUoaW5kZXggKz0gMSk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChpbmRleCkgewogICAgICAgICAgICAvLyDjg6vjg7zjg5fjgpLmipzjgZHjgovjgYvjga7liKTlrpoKICAgICAgICAgICAgaWYgKGluZGV4ID49IGRhdGFzLmxlbmd0aCkgewogICAgICAgICAgICAgIC8vIOaKnOOBkeOCiyDph43opIfjgpLlvL7jgY8KICAgICAgICAgICAgICBsaXN0ID0gbGlzdC5maWx0ZXIoZnVuY3Rpb24gKHgsIGksIHNlbGYpIHsKICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmluZGV4T2YoeCkgPT09IGk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcmVzKGxpc3QpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOWGjei1t+eahOOBq+Wun+ihjAogICAgICAgICAgICAgIG1ha2VMaXN0KGluZGV4KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSAvLyDliJ3lm57lrp/ooYwKCgogICAgICAgIG1ha2VMaXN0KDApOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChsaXN0KSB7CiAgICAgICAgY29uc29sZS5kZWJ1ZyhsaXN0KTsgLy8g5Y+X44GR5Y+W44Gj44GfdWlk44GubGlzdOOCkuODq+ODvOODl+OBl+OBpmZpcmViYXNl44GL44KJ44OH44O844K/44KS5Y+W5b6XIHRoaXMudXNlcnNEYXRh44Gr44G244Gh6L6844KACgogICAgICAgIHZhciBpbWdMaXN0ID0gW107CiAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgZnVuY3Rpb24gZ2V0VXNlckRhdGEoaW5kZXgpIHsKICAgICAgICAgICAgdmFyIHVpZCA9IGxpc3RbaW5kZXhdOwogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICB2YXIgdXNlciA9IGRhdGFiYXNlLnJlZigiL3VzZXJzLyIuY29uY2F0KHVpZCkpOwogICAgICAgICAgICAgIHVzZXIub24oJ3ZhbHVlJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICB2YXIgdmFsID0gc25hcHNob3QudmFsKCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKHVpZCk7CiAgICAgICAgICAgICAgICBzZWxmLnVzZXJzRGF0YVt1aWRdID0gdmFsOwogICAgICAgICAgICAgICAgaW1nTGlzdC5wdXNoKHZhbC5pbWcpOwogICAgICAgICAgICAgICAgcmVzb2x2ZShpbmRleCArPSAxKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgICAgICBpZiAoaW5kZXggPj0gbGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIC8vIOaKnOOBkeOCiyBmaWx0ZXLjgYvjgZHjgosKICAgICAgICAgICAgICAgIGltZ0xpc3QgPSBpbWdMaXN0LmZpbHRlcihmdW5jdGlvbiAoeCwgaSwgc2VsZikgewogICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5pbmRleE9mKHgpID09PSBpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXMoaW1nTGlzdCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGdldFVzZXJEYXRhKGluZGV4KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSAvLyDliJ3lm57lrp/ooYwKCgogICAgICAgICAgZ2V0VXNlckRhdGEoMCk7CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoaW1nTGlzdCkgewogICAgICAgICAgY29uc29sZS5kZWJ1ZyhpbWdMaXN0KTsgLy8g5Y+X44GR5Y+W44Gj44GfaW1nTGlzdOOCkuWxlemWi+OBl+OBplVSTOOCkuWPluW+l+OBmeOCiyB0aGlzLmltZ1VSTOOBq3t1aWQ6IOWPluW+l+OBl+OBn1VSTH3jga7lvaLjgafjgbbjgaHovrzjgoAKCiAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEltZ1VSTChpbmRleCkgewogICAgICAgICAgICAgIHZhciBpbWcgPSBpbWdMaXN0W2luZGV4XTsKICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgIC8vIFVSTOWPluW+lwogICAgICAgICAgICAgICAgdmFyIGltZ1JlZiA9IHN0b3JhZ2UucmVmKCIvIi5jb25jYXQoaW1nKSk7CiAgICAgICAgICAgICAgICBpbWdSZWYuZ2V0RG93bmxvYWRVUkwoKS50aGVuKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgICAgICAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICAgICAgICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gJ2Jsb2InOwoKICAgICAgICAgICAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYmxvYiA9IHhoci5yZXNwb25zZTsKICAgICAgICAgICAgICAgICAgICBzZWxmLmltZ1VSTFtpbWddID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgIHhoci5vcGVuKCdHRVQnLCB1cmwpOwogICAgICAgICAgICAgICAgICB4aHIuc2VuZCgpOwogICAgICAgICAgICAgICAgICByZXNvbHZlKGluZGV4ICs9IDEpOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoIkdldEltZ1VSTCBFcnJvciIsIGVycm9yKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGluZGV4KSB7CiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPj0gaW1nTGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgLy8g5oqc44GR44KLCiAgICAgICAgICAgICAgICAgIHJlcygpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgZ2V0SW1nVVJMKGluZGV4KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSAvLyDliJ3lm57lrp/ooYwKCgogICAgICAgICAgICBnZXRJbWdVUkwoMCk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8g5Yem55CG57WC5LqGIOe1kOaenOOBruODreOCsOWHuuWKmyDjgZTjgormirzjgZdzZXRUaW1lb3V0CiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoIkdldFRpbWVMaW5lRmluaXNoISEhIik7CiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoInBvc3RMaXN0Iiwgc2VsZi5wb3N0TGlzdCk7CiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoInVzZXJzRGF0YSIsIHNlbGYudXNlcnNEYXRhKTsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiaW1nVVJMIiwgc2VsZi5pbWdVUkwpOwogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBzZWxmLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgfSwgMTAwMCk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["Timeline.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Indeterminate v-if=\"loading\"/>\n    <v-timeline v-else dense>\n      <v-timeline-item v-for=\"(item, i) in postList\" :key=\"i\" large>\n        <template v-slot:icon>\n          <v-avatar>\n            <img :src=\"imgURL[usersData[item.uid].img]\">\n          </v-avatar>\n        </template>\n        <template v-slot:opposite>\n          <span>Tus eu perfecto</span>\n        </template>\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"headline\">{{ usersData[item.uid].name }}</v-card-title>\n          <v-card-text class=\"content\">{{ item.content }}\n          </v-card-text>\n\n        </v-card>\n      </v-timeline-item>\n  </v-timeline>\n  </div>\n\n</template>\n\n<script>\nimport firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport Indeterminate from './Indeterminate'\n\nexport default {\n  data() {\n    return {\n      loading: true,\n      postList: [],\n      usersData: {},\n      imgURL: {}\n    }\n  },\n  components: {\n    Indeterminate\n  },\n  created() {\n    // めっちゃエラー起きるけどsetTimeoutでごり押ししてます なんか良い解決法ないかな <= async/await\n    // firebaseとの通信終わってから<template>読み込むようにすれば良いんだと思う\n    // Promiseでループ処理するためになんか変なの使ってる Promise使ってるくせに見通しクソです\n    // ソース => 'https://blog.htmlhifive.com/2016/02/22/promise-async-loop/'\n    let database = firebase.database()\n    let storage = firebase.storage()\n    let self = this\n\n    // Promiseで非同期処理するゾ\n    let result = new Promise(function(resolve) {\n      // postsData(uid, content)の取得\n      let posts = database.ref('/posts')\n      posts.on('value', (snapshot)=> {\n        let postList = []\n        let val = snapshot.val()\n        // 連想配列をループで展開して配列にする\n        Object.keys(val).forEach(function(key) {\n          postList.push(val[key])\n        })\n        console.debug(val)\n        console.debug(postList)\n        self.postList = postList.reverse() // this.postListに代入 ついでに反転\n        //resolve(val)\n        resolve(postList)\n\n      })\n    })\n    result.then( function(datas) {\n      console.debug(datas)\n      // データベースのpostsを受け取りループで展開してuidを取得 それにfilterかけて次に回す\n      new Promise(function(res) {\n        let list = []\n        // ここにループさせる関数\n        // datasのdataを受け取ってuidを返す\n        function makeList(index) {\n          return new Promise(function(resolve) {\n            console.debug(datas[index])\n            list.push(datas[index].uid)\n            resolve(index+=1)\n          }).then(function(index) {\n            // ループを抜けるかの判定\n            if (index >= datas.length) {\n              // 抜ける 重複を弾く\n              list = list.filter((x,i,self) => self.indexOf(x) === i)\n              res(list)\n            } else {\n              // 再起的に実行\n              makeList(index)\n            }\n          })\n        }\n        // 初回実行\n        makeList(0)\n      }).then(function(list) {\n        console.debug(list)\n        // 受け取ったuidのlistをループしてfirebaseからデータを取得 this.usersDataにぶち込む\n        let imgList = []\n        new Promise(function(res) {\n          function getUserData(index) {\n            let uid = list[index]\n            return new Promise(function(resolve) {\n              let user = database.ref(`/users/${uid}`)\n              user.on('value', (snapshot)=> {\n                let val = snapshot.val()\n                console.debug(uid)\n                self.usersData[uid] = val\n                imgList.push(val.img)\n                resolve(index+=1)\n              })\n            }).then(function(index) {\n              if (index >= list.length) {\n                // 抜ける filterかける\n                imgList = imgList.filter((x,i,self) => self.indexOf(x) === i)\n                res(imgList)\n              } else {\n                getUserData(index)\n              }\n            })\n          }\n          // 初回実行\n          getUserData(0)\n        }).then(function(imgList) {\n          console.debug(imgList)\n          // 受け取ったimgListを展開してURLを取得する this.imgURLに{uid: 取得したURL}の形でぶち込む\n          new Promise(function(res) {\n            function getImgURL(index) {\n              let img = imgList[index]\n              return new Promise(function(resolve) {\n                // URL取得\n                let imgRef = storage.ref(`/${img}`)\n                imgRef.getDownloadURL().then((url)=> {\n                  let xhr = new XMLHttpRequest()\n                  xhr.responseType = 'blob'\n                  xhr.onload = ()=> {\n                    let blob = xhr.response\n                    self.imgURL[img] = URL.createObjectURL(blob)\n                  }\n                  xhr.open('GET', url)\n                  xhr.send()\n                  resolve(index+=1)\n                }).catch(function(error) {\n                  console.debug(\"GetImgURL Error\",error)\n                })\n              }).then(function(index) {\n                if (index >= imgList.length) {\n                  // 抜ける\n                  res()\n                } else {\n                  getImgURL(index)\n                }\n              })\n            }\n            // 初回実行\n            getImgURL(0)\n          }).then(function() {\n            // 処理終了 結果のログ出力 ごり押しsetTimeout\n            console.debug(\"GetTimeLineFinish!!!\")\n            console.debug(\"postList\", self.postList)\n            console.debug(\"usersData\", self.usersData)\n            console.debug(\"imgURL\", self.imgURL)\n            setTimeout(() => {\n              self.loading = false;\n            }, 1000);\n          })\n        })\n      })\n    })\n  },\n}\n</script>\n\n<style scoped>\n.content {\n  white-space: pre-wrap;\n}\n</style>\n"],"sourceRoot":"src/components"}]}