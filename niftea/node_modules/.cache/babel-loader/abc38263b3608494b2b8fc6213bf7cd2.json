{"remainingRequest":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/babel-loader/lib/index.js!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/choumasateru/Desktop/development_direction/vue/niftea/src/components/Attendance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/src/components/Attendance.vue","mtime":1578226723255},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choumasateru/Desktop/development_direction/vue/niftea/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Attendance.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <div>\n\n    <v-toolbar\n      dense\n      floating\n      dark\n      class=\"ma-4\"\n    >\n      <h1>{{ now }}</h1>\n    </v-toolbar>\n    <v-row>\n\n      <v-col cols=\"12\" class=\"mt-12\">\n        <div v-if=\"show\" class=\"animated\" v-bind:class=\"animated\">\n          <h1 class=\"text-center display-4 rainbow\">おはよう！</h1>\n        </div>\n        <div v-else class=\"animated\" v-bind:class=\"animated\">\n          <h1 class=\"text-center display-4 rainbow\">ようこそN中へ</h1>\n        </div>\n      </v-col>\n      <v-col class=\"mt-12\">\n\n\n        <v-row v-if=\"rejection\" :justify=\"'center'\">\n          <v-col cols=\"8\">\n            <v-alert\n            prominent\n            type=\"error\"\n          >\n            <v-row align=\"center\">\n              <v-col>これからデータの初期化をはじめます。エラーが起きると管理人がクッソ大変なんでしばらく触らないでください</v-col>\n            </v-row>\n          </v-alert>\n          </v-col>\n        </v-row>\n\n\n        <v-form v-else v-model=\"valid\">\n          <v-row  :justify=\"'center'\">\n            <v-col cols=\"3\">\n\n              <v-text-field\n                v-model=\"number\"\n\n                label=\"登校番号を入力してね\"\n                hint=\"メニューの「登校する」を押して番号を取得してね\"\n                outlined\n                rounded\n                persistent-hint\n                :rules=\"rules\"\n\n                color=\"cyan\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"1\">\n              <v-fab-transition>\n                <v-btn\n                  class=\"pink\"\n                  fab\n                  dark\n                  required\n                  v-show=\"valid\"\n                  @click=\"send()\"\n                >\n                  <v-icon>mdi-send</v-icon>\n                </v-btn>\n\n              </v-fab-transition>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-col>\n    </v-row>\n\n    <v-dialog\n      v-model=\"dialog\"\n      max-width=\"1200\"\n    >\n      <NowSeatWrapCard/>\n    </v-dialog>\n\n    <v-fab-transition>\n      <v-btn\n        color=\"cyan\"\n        fab\n        dark\n        fixed\n        x-large\n        right\n        bottom\n        outlined\n        @click=\"dialog = true\"\n      >\n        <v-icon>mdi-account-group</v-icon>\n      </v-btn>\n\n    </v-fab-transition>\n\n    <v-col cols=\"2\" class=\"qrCord\">\n      <v-img\n        :src=\"qr\"\n      ></v-img>\n    </v-col>\n\n  </div>\n\n\n\n</template>\n\n<script>\nimport firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport NowSeatWrapCard from './NowSeatWrapCard'\n\nexport default {\n  data() {\n    return {\n      now: '',\n      number: '',\n      show: true,\n      inAnimated: '',\n      outAnimated: '',\n      middleAnimated: '',\n      color: '',\n      animated: '',\n      rules: [v => v.length > 0 || '内容がないよう😭'],\n      valid: true,\n      rejection: false, // 指定時間になったら予約データをリセットするため操作を禁止する\n      dialog: false,\n      qr: ''//QRコード\n    }\n  },\n  components: {\n    NowSeatWrapCard\n  },\n  created() {\n    this.getQR()\n    this.getNow()\n    setInterval(function() {\n      this.animation()\n    }.bind(this), 6000)\n  },\n  methods: {\n    getNow() {\n      setInterval(function() {\n        let now = new Date()\n        this.now = now.toLocaleString()\n        this.changeScreen(now)\n      }.bind(this), 1000)\n    },\n    async animation() {\n      let list = await this.getInAndOut()\n      this.inAnimated = list[0]\n      this.outAnimated = list[1]\n      this.middleAnimated = list[2]\n      this.show = !this.show\n\n      this.animated = list[0]\n      setTimeout(function() {\n        this.animated = list[2]\n        setTimeout(function() {\n          this.animated = list[1]\n        }.bind(this), 2000)\n      }.bind(this), 2000)\n    },\n    getInAndOut() {\n      let inList = ['bounceIn','bounceInDown','bounceInLeft','bounceInRight','bounceInUp']\n      let outList = ['bounceOut','bounceOutDown','bounceOutLeft','bounceOutRight','bounceOutUp']\n      let middleList = ['bounce','flash','pulse','rubberBand','shake','swing','tada','wobble','jello','heartBeat']\n      let inRandom = ''\n      let outRandom = ''\n      let middleRandom = ''\n      let self = this\n      return new Promise(function(resolve) {\n        // whileで違う値が出るまでループ\n        let loop = true\n        while (loop) {\n          inRandom = inList[Math.floor( Math.random() * 5 )]\n          if (self.inAnimated != inRandom) {\n            loop = false\n          }\n        }\n        // 同じくoutもループ\n        loop = true\n        while (loop) {\n          outRandom = outList[Math.floor( Math.random() * 5 )]\n          if (self.outAnimated != outRandom) {\n            loop = false\n          }\n        }\n        // 同じくmiddleもループ\n        loop = true\n        while (loop) {\n          middleRandom = middleList[Math.floor( Math.random() * 10 )]\n          if (self.middleAnimated != middleRandom) {\n            loop = false\n          }\n        }\n        resolve([inRandom,outRandom,middleRandom])\n      })\n    },\n    dataReset(target) { // 予約データや現在のデータをすべてnilに変える 引数で指定されたデータをnilに書き換える\n      let database = firebase.database()\n      for (let i=0; i<15; i++) {\n        for (let j=0; j<6; j++) {\n          database.ref(`seats/${target}/${i}/${j}`).set('nil')\n        }\n      }\n      console.debug(`${target}:リセット完了`)\n    },\n    changeScreen(now) { // 指定時間(9:30)になったときに画面を切り替える\n      if (now.getHours() == 9 && now.getMinutes() == 30 && now.getSeconds() == 0) {\n        let week = [\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"]\n        let dayOfWeek = week[now.getDay()-1]\n\n        this.rejection = true\n        setTimeout(()=> {\n          this.dataReset(dayOfWeek)\n          setTimeout(()=> {\n            this.rejection = false\n          }, 5000)\n        }, 5000)\n      } else if (now.getHours() == 16 && now.getMinutes() == 0 && now.getSeconds() == 0) { // 指定時間(16:00)に画面を切り替えてNowをリセット\n        this.rejection = true\n        setTimeout(()=> {\n          this.dataReset(\"Now\")\n          setTimeout(()=> {\n            this.rejection = false\n          }, 5000)\n        }, 5000)\n      } else if (now.getSeconds() == 55) {\n        // １分ごとにattendanceDataを調べて期限が切れていれば消す\n        this.cacheAttendanceNumber()\n        console.debug(\"１分\")\n      }\n    },\n    cacheAttendanceNumber() { // １分毎にattendanceを確認して古いものを捨てる\n      let now = new Date()\n\n      let database = firebase.database()\n      let attendance = database.ref('attendance/')\n      attendance.on('value', (snapshot)=> {\n        let val = snapshot.val()\n        delete val['nil'] // 空データの削除\n\n        for (let key in val) {\n          let timeLimitData = val[key]['timeLimit']\n          let timeLimit = new Date()\n          timeLimit.setHours(timeLimitData['Hours'])\n          timeLimit.setMinutes(timeLimitData['Minutes'])\n\n          if (timeLimit.getHours() == now.getHours() && timeLimit.getMinutes() <= now.getMinutes()) {\n            database.ref(`attendance/${key}`).remove()\n            console.debug(`${key}を削除しました`)\n          } else if (timeLimit.getMinutes() == 0 && now.getMinutes() == 0) { // リミットがx:00の場合\n            database.ref(`attendance/${key}`).remove()\n            console.debug(`${key}を削除しました`)\n          }\n\n\n        }\n\n      })\n\n    },\n    send() {\n      console.log(this.number)\n      this.$router.push(`/attendance_result/${this.number}`)\n    },\n    getQR() {\n      let storage = firebase.storage()\n      let imgRef = storage.ref('QR.png')\n      imgRef.getDownloadURL().then((url)=> {\n        let xhr = new XMLHttpRequest()\n        xhr.responseType = 'blob'\n        xhr.onload = ()=> {\n          let blob = xhr.response\n          this.qr = URL.createObjectURL(blob)\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.rainbow {\n  /* 背景グラデーションを指定・幅を 200% にしておく */\n  background: linear-gradient(to right, #f00 0%, #f80 14.28%, #dd0 28.56%, #0d0 42.85%, #0dd 57.14%, #00f 71.42%, #e0e 85.71%, #f00 100%) 0% center / 200% auto;\n\n  /* 背景画像を文字でマスクする */\n          background-clip: text;\n  -webkit-background-clip: text;\n\n  /* 文字色を透明にできればよく color: transparent でも color: rgba(0, 0, 0, 0) でも可 */\n          text-fill-color: transparent;\n  -webkit-text-fill-color: transparent;\n\n  /* アニメーション指定 */\n  animation: rainbow 20s linear infinite;\n}\n\n/* 背景の横位置をズラす */\n@keyframes rainbow {\n  to { background-position-x: 200%; }\n}\n\n.qrCord {\n  position: fixed;\n  left: 10px;\n  bottom: 10px;\n}\n\n\n</style>\n"],"sourceRoot":"src/components"}]}